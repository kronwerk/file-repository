@using WebApplication2.Models

@using System.Data
@using System.Data.SqlClient
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@{
    ViewBag.Title = "Search";
}
<h2>@ViewBag.Title.</h2>
<form id="live-search" action=""  method="post">
    <fieldset>
        <input type="text" class="form-control" id="filter" value="" placeholder="File" />
        <input type="text" class="form-control" id="filter_user" value="" placeholder="Repo" />
        <input type="checkbox" id="filter_checkbox" />Do not clean results<br />

        <span id="filter-count"></span>
</fieldset>
</form>
@{  
string connStr = @"Data Source=(LocalDb)\v11.0;AttachDbFilename=|DataDirectory|\aspnet-WebApplication2-20160108044733.mdf;Initial Catalog=aspnet-WebApplication2-20160108044733;Integrated Security=True";
                    SqlConnection conn = new SqlConnection(connStr);
                    conn.Open();
                    string query = "SELECT f.Id, f.Name, r.Name AS r_name " +
"FROM Files f LEFT OUTER JOIN Repositories r ON f.Repo = r.Id";
                    SqlCommand cmd = new SqlCommand(query, conn);
                    SqlDataReader dr = cmd.ExecuteReader(CommandBehavior.CloseConnection);



}

<nav class="list-group">
    <ul>
        @while (dr.Read())
        {

            string s = dr.GetValue(1).ToString() + " (in '" + dr.GetValue(2).ToString() + "')";
        <li>@Html.ActionLink(s, "otherProfile", "Account", routeValues: new { id = dr.GetValue(0).ToString() }, htmlAttributes: new { title = "Delete Repository", @class = "list-group-item" })</li>
                }
    </ul>
</nav>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
    $("#filter").keyup(function () {

        // Retrieve the input field text and reset the count to zero
        var filter = $(this).val(), count = 0;

        // Loop through the comment list
        $("nav ul li").each(function () {

            // If the list item does not contain the text phrase fade it out
            if ($(this).text().search(new RegExp(filter, "i")) < 0) {
                $(this).fadeOut();

                // Show the list item if the phrase matches and increase the count by 1
            } else {
                $(this).show();
                count++;
            }
        });

        // Update the count
        var numberItems = count;
        $("#filter-count").text(count+" found");
    });

    $("#filter_user").keyup(function () {

        // Retrieve the input field text and reset the count to zero
        var filter = $(this).val(), count = 0;

        // Loop through the comment list
        $("nav ul li").each(function () {
            var str = $(this).text();
            var start_pos = str.indexOf('(in ') + 3;
            var end_pos = str.indexOf(')', start_pos);
            var repo = str.substring(start_pos, end_pos)
            // If the list item does not contain the text phrase fade it out
            if (repo.search(new RegExp(filter, "i")) < 0) {
                $(this).fadeOut();

                // Show the list item if the phrase matches and increase the count by 1
            } else {
                if (!$("#filter_checkbox").is(':checked')) {
                    $(this).show();
                    count++;
                }
            }
        });

        // Update the count
        var numberItems = count;
        $("#filter-count").text(count+ " found");
    });

});
</script>